{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoDao","ConnectionFactory","NegociacaoService","_http","negociacao","getConnection","then","connection","dao","adiciona","catch","Error","listaTodos","negociacoesAtuais","obtemNegociacoes","negociacoes","filter","some","isEquals","negociacaoExistente","console","log","erro","apagaTodas","Promise","resolve","reject","get","arrayObjeto","map","Date","objeto","data","quantidade","valor","all","obtemNegociacoesDaSemana","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","arrayPromisses","reduce","arrayNovo","elemento","concat"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {Negociacao} from '../models/Negociacao';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {ConnectionFactory} from './ConnectionFactory';\n\nexport class NegociacaoService{\n\n    constructor(){\n       this._http = new HttpService(); \n    }\n\n    cadastra(negociacao){\n        return ConnectionFactory\n                    .getConnection()\n                    .then(connection => new NegociacaoDao(connection))\n                    .then(dao => dao.adiciona(negociacao))\n                    .then(() => 'Negociação cadastrada com sucesso!')\n                    .catch(erro => {throw new Error(\"Não foi possível adicionar a negociação\") });\n\n    }\n\n    lista(){\n        return ConnectionFactory\n                .getConnection()\n                .then(connection => new NegociacaoDao(connection))\n                .then(dao => dao.listaTodos())\n                .catch(erro => {throw new Error(\"Não foi possível buscar todas as negociações!\") });\n    }\n\n    importarNegociacoes(negociacoesAtuais){\n        return this.obtemNegociacoes()\n                   .then(negociacoes => \n                        negociacoes.filter( negociacao => \n                            !negociacoesAtuais.some(\n                                negociacaoExistente => negociacao.isEquals(negociacaoExistente)\n                            )\n                        ))\n                   .catch(erro => {\n                        console.log(erro)\n                        throw new Error(\"Não foi possível importar todas as negociações!\");\n                   });\n    }\n\n    apagaTodas(){\n        return ConnectionFactory\n                    .getConnection()\n                    .then(connection => new NegociacaoDao(connection))\n                    .then(dao => dao.apagaTodas())\n                    .catch(erro => {throw new Error(\"Não foi possível buscar todas as negociações!\") });\n    }\n\n    obtemNegociacoesDaSemana(){\n        return new Promise((resolve,reject)=>{\n            this._http.get('negociacoes/semana')\n                      .then((arrayObjeto) =>\n                        resolve(\n                            arrayObjeto.map(objeto => new Negociacao(new Date(objeto.data),objeto.quantidade,objeto.valor)))\n                        ).catch(erro => reject(erro));\n        });\n        \n    }\n\n    obtemNegociacoesDaSemanaAnterior(){\n        return new Promise((resolve,reject)=>{\n            this._http.get('negociacoes/anterior')\n                      .then((arrayObjeto) =>\n                        resolve(\n                            arrayObjeto.map(objeto => new Negociacao(new Date(objeto.data),objeto.quantidade,objeto.valor)))\n                        ).catch(erro => reject(erro));\n        });\n    }\n\n    obtemNegociacoesDaSemanaRetrasada(){\n        return new Promise((resolve,reject)=>{\n            this._http.get('negociacoes/retrasada')\n                      .then((arrayObjeto) =>\n                        resolve(\n                            arrayObjeto.map(objeto => new Negociacao(new Date(objeto.data),objeto.quantidade,objeto.valor)))\n                        ).catch(erro => reject(erro));\n        });\n    }\n\n    obtemNegociacoes(){\n        return new Promise((resolve,reject) => {\n            Promise.all([this.obtemNegociacoesDaSemana(),\n                        this.obtemNegociacoesDaSemanaAnterior(),\n                        this.obtemNegociacoesDaSemanaRetrasada()])\n                    .then(arrayPromisses => {\n                        resolve(arrayPromisses.reduce((arrayNovo,elemento) => arrayNovo.concat(elemento),[]));\n                    })\n                    .catch(erro => reject(erro));\n        })   \n    }\n}"]}